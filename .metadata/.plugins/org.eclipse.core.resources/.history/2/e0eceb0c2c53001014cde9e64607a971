/*
 * stopWatch.c
 *
 *  Created on: Jun 23, 2025
 *      Author: rhoblack
 */

#include "stopWatch.h"

typedef enum {STOP, RUN}stopWatchState_t;

extern inputData_TypeDef controlData;
static stopWatchState_t stopWatchState = STOP;
static watch_t stopWatch = {STOP_WATCH, 12, 0, 0, 0};
static int modeFlag = 0;

void StopWatch_IncTimeCallBack()
{
	if (stopWatchState == RUN) {
		StopWatch_IncTime();
	}
}

void StopWatch_IncTime()
{
	if (stopWatch.msec < 1000-1) {
		stopWatch.msec++;
		return;
	}
	stopWatch.msec = 0;

	if (stopWatch.sec < 60-1) {
		stopWatch.sec++;
		return;
	}
	stopWatch.sec = 0;

	if (stopWatch.min < 60-1) {
		stopWatch.min++;
		return;
	}
	stopWatch.min = 0;

	if (stopWatch.hour < 24-1) {
		stopWatch.hour++;
		return;
	}
	stopWatch.hour = 0;
}

watch_t StopWatch_Excute()
{
	switch (stopWatchState)
	{
	case STOP:
		StopWatch_Stop();
		break;
	case RUN:
		StopWatch_Run();
		break;
	}
	return stopWatch;
}


void StopWatch_Run()
{
	if (controlData.id == RUN_STOP) {
		modeFlag = 1;
		stopWatchState = STOP;
	}

	//	FND_WriteData((stopWatch.min % 10 * 1000) + (stopWatch.sec * 10) + (stopWatch.msec/100));
	//
	//	FND_WriteDp(FND_DP_100|FND_DP_1, FND_DP_OFF);
	//
	//	if (stopWatch.msec%100 < 50) {
	//		FND_WriteDp(FND_DP_10, FND_DP_ON);
	//	}
	//	else {
	//		FND_WriteDp(FND_DP_10, FND_DP_OFF);
	//	}
	//
	//	if (stopWatch.msec < 500) {
	//		FND_WriteDp(FND_DP_1000, FND_DP_ON);
	//	}
	//	else {
	//		FND_WriteDp(FND_DP_1000, FND_DP_OFF);
	//	}
}

void StopWatch_Stop()
{

	stopWatch.msec = 0;
	stopWatch.sec = 0;
	stopWatch.min = 0;
	stopWatch.hour = 0;
	if (controlData.id == RUN_STOP && modeFlag == 0) {
		modeFlag = 0;
		stopWatchState = RUN;
	}

	//FND_WriteData((stopWatch.min % 10 * 1000) + (stopWatch.sec * 10) + (stopWatch.msec/100));
}






