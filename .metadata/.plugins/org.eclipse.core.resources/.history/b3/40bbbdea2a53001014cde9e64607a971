/*
 * Controller.c
 *
 *  Created on: Jun 24, 2025
 *      Author: rhoblack
 */
#include "Controller.h"

static void Controller_Mode();
static void Time_curr();

inputData_TypeDef controlData = {0};
C2P_Data OutputData = {
    .current_time = { .id = 0, .hour = 12, .min = 10, .sec = 0, .msec = 0 },
    .running_time = { .id = 0, .hour = 0, .min = 0, .sec = 0, .msec = 0 },
    .speed = 0,
    .distance = 0,
    .calories = 0,
    .runstop = 0,
    .lcd_mode = 0,
    .song = 0
};


void Controller_Excute()
{
	Controller_Mode();
}

// C2P
void Controller_OutData(C2P_Data *c2p_data)
{
	memcpy(c2p_data, &OutputData, sizeof(C2P_Data));
}



void Controller_SetInputData(inputData_TypeDef inputData)
{
	if (inputData.id == LCD_MODE) {
		controlData.id = LCD_MODE;
	}
	else if (inputData.id == RUN_STOP) {
		controlData.id = RUN_STOP;
	}
	else if (inputData.id == SPEED) {
		controlData.id = SPEED;
	}
	else if(inputData.id == ULTRA){
		controlData.id = ULTRA;
	}
	else if(inputData.id == SONG){
		controlData.id = SONG;
	}
	controlData.data = inputData.data;
	controlData.lcd_data = inputData.lcd_data;
	controlData.speed_data = inputData.speed_data;
}

void Controller_Mode()
{
	Time_curr();
	switch(controlData.id)
	{
	case RUN_STOP:
		OutputData.runstop ^= 1;
		if(OutputData.runstop == 0){
			 OutputData.speed = 0;
		  }
		break;

	case LCD_MODE:
		OutputData.lcd_mode = controlData.lcd_data;
		break;

	case SPEED:
		OutputData.speed = controlData.speed_data;
		break;

	case ULTRA:
		if (controlData.data > 100){
			OutputData.lcd_mode = WARNING;
			OutputData.song = 3;
		}
		break;

	case SONG:
		OutputData.song = controlData.data;
		break;
	}
}


static uint8_t pre_sec = 0;

void Time_curr(){
   uint8_t met;
   OutputData.running_time = StopWatch_Excute();
   OutputData.current_time = TimeWatch_Excute();
   if(OutputData.running_time.sec != pre_sec){
      OutputData.distance += 0.28;
      pre_sec = OutputData.running_time.sec;
   }

   switch(OutputData.speed){
   case 0:
	   met = 0;
   case 1:
      met = 15;
      break;
   case 2:
      met = 20;
      break;
   case 3:
      met = 28;
      break;
   case 4:
      met = 33;
      break;
   case 5:
      met = 38;
      break;
   case 6:
      met = 43;
      break;
   case 7:
      met = 60;
      break;
   case 8:
      met = 83;
      break;
   case 9:
      met = 98;
      break;
   }
   OutputData.calories = met * 72 * OutputData.distance /10000;
}
